{"version":3,"sources":["../src/define_manager.js"],"names":["DefineManager","define","defines","shift","key","set","promised","Promise","resolve","reject","matching","length","matched","p","then","hasOwnProperty","append","default","catch","e","name","def","tryGet","Define","split","name1","name2","value","force","trySet","names","join","check","constructor","Object"],"mappings":"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","sourcesContent":["import Define from './define'\r\n\r\nclass DefineManager {\r\n    append(...defines) {\r\n        let define\r\n        while ((define = defines.shift())) {\r\n            for (const key in define) {\r\n                this.set(key, define[key])\r\n            }\r\n        }\r\n    }\r\n\r\n    import(...promised) {\r\n        return new Promise((resolve, reject) => {\r\n            const matching = promised.length\r\n            let matched = 0, p\r\n            while ((p = promised.shift())) {\r\n                p.then(defines => {\r\n                    if (defines.hasOwnProperty('default')) {\r\n                        this.append(defines.default)\r\n                    } else {\r\n                        this.append(defines)\r\n                    }\r\n                    ++matched\r\n                    if (matched === matching) {\r\n                        resolve()\r\n                    }\r\n                }).catch(e => {\r\n                    reject(e)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    get(name = null, def = null) {\r\n        return name ? this.tryGet(Define, name, def) : Define\r\n    }\r\n\r\n    tryGet(define, name, def) {\r\n        const [name1, name2] = name.split('.', 2)\r\n        if (define.hasOwnProperty(name1)) {\r\n            return name2 ? this.tryGet(define[name1], name2, def) : define[name1]\r\n        }\r\n        return def\r\n    }\r\n\r\n    set(name, value, force = true) {\r\n        this.trySet(Define, name, value, force)\r\n    }\r\n\r\n    trySet(define, name, value, force) {\r\n        const names = name.split('.'),\r\n            name1 = names.shift(),\r\n            name2 = names.join('.')\r\n\r\n        const check = () => {\r\n            if (!define.hasOwnProperty(name1)) {\r\n                define[name1] = {}\r\n            } else {\r\n                if (typeof define[name1] !== 'object' || define[name1].constructor !== Object) {\r\n                    if (force) define[name1] = {}\r\n                    else return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n\r\n        if (name2) {\r\n            if (check()) {\r\n                this.trySet(define[name1], name2, value, force)\r\n            }\r\n            return\r\n        }\r\n\r\n        if (value && typeof value === 'object' && value.constructor === Object) {\r\n            if (check()) {\r\n                for (const key in value) {\r\n                    this.trySet(define[name1], key, value[key], force)\r\n                }\r\n            }\r\n        } else {\r\n            define[name1] = value\r\n        }\r\n    }\r\n}\r\n\r\nexport default new DefineManager()"],"file":"define_manager.js"}