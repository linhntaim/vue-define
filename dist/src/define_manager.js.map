{"version":3,"sources":["../../src/define_manager.js"],"names":["Define_manager","define","defines","shift","key","set","promised","Promise","resolve","reject","matching","length","matched","p","then","hasOwnProperty","append","e","name","tryGet","Define","split","name1","name2","value","force","trySet","names","join","check","constructor","Object"],"mappings":"gGAAA,wD,msDAEMA,CAAAA,c,0JACiB,CACf,GAAIC,CAAAA,MAAJ,CADe,8BAATC,OAAS,0CAATA,OAAS,uBAEf,MAAQD,MAAM,CAAGC,OAAO,CAACC,KAAR,EAAjB,CAAmC,CAC/B,IAAK,GAAMC,CAAAA,GAAX,GAAkBH,CAAAA,MAAlB,CAA0B,CACtB,KAAKI,GAAL,CAASD,GAAT,CAAcH,MAAM,CAACG,GAAD,CAApB,CACH,CACJ,CACJ,C,wCAEmB,+CAAVE,QAAU,+CAAVA,QAAU,yBAChB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC,GAAMC,CAAAA,QAAQ,CAAGJ,QAAQ,CAACK,MAA1B,CACA,GAAIC,CAAAA,OAAO,CAAG,CAAd,CAAiBC,CAAjB,CACA,MAAQA,CAAC,CAAGP,QAAQ,CAACH,KAAT,EAAZ,CAA+B,CAC3BU,CAAC,CAACC,IAAF,CAAO,SAAAZ,OAAO,CAAI,CACd,GAAIA,OAAO,CAACa,cAAR,CAAuB,SAAvB,CAAJ,CAAuC,CACnC,KAAI,CAACC,MAAL,CAAYd,OAAO,WAAnB,CACH,CAFD,IAEO,CACH,KAAI,CAACc,MAAL,CAAYd,OAAZ,CACH,CACD,EAAEU,OAAF,CACA,GAAIA,OAAO,GAAKF,QAAhB,CAA0B,CACtBF,OAAO,EACV,CACJ,CAVD,WAUS,SAAAS,CAAC,CAAI,CACVR,MAAM,CAACQ,CAAD,CACT,CAZD,CAaH,CACJ,CAlBM,CAmBV,C,iCAEgB,IAAbC,CAAAA,IAAa,2DAAN,IAAM,CACb,MAAOA,CAAAA,IAAI,CAAG,KAAKC,MAAL,CAAYC,kBAAZ,CAAoBF,IAApB,CAAH,CAA+BE,kBAC7C,C,sCAEMnB,M,CAAQiB,I,CAAM,iBACMA,IAAI,CAACG,KAAL,CAAW,GAAX,CAAgB,CAAhB,CADN,4CACVC,KADU,iBACHC,KADG,iBAEjB,GAAItB,MAAM,CAACc,cAAP,CAAsBO,KAAtB,CAAJ,CAAkC,CAC9B,MAAOC,CAAAA,KAAK,CAAG,KAAKJ,MAAL,CAAYlB,MAAM,CAACqB,KAAD,CAAlB,CAA2BC,KAA3B,CAAH,CAAuCtB,MAAM,CAACqB,KAAD,CAC5D,CACD,MAAO,KACV,C,gCAEGJ,I,CAAMM,K,CAAqB,IAAdC,CAAAA,KAAc,2DAAN,IAAM,CAC3B,KAAKC,MAAL,CAAYN,kBAAZ,CAAoBF,IAApB,CAA0BM,KAA1B,CAAiCC,KAAjC,CACH,C,sCAEMxB,M,CAAQiB,I,CAAMM,K,CAAOC,K,CAAO,CAC/B,GAAME,CAAAA,KAAK,CAAGT,IAAI,CAACG,KAAL,CAAW,GAAX,CAAd,CACIC,KAAK,CAAGK,KAAK,CAACxB,KAAN,EADZ,CAEIoB,KAAK,CAAGI,KAAK,CAACC,IAAN,CAAW,GAAX,CAFZ,CAIA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAI,CAAC5B,MAAM,CAACc,cAAP,CAAsBO,KAAtB,CAAL,CAAmC,CAC/BrB,MAAM,CAACqB,KAAD,CAAN,CAAgB,EACnB,CAFD,IAEO,CACH,GAAI,QAAOrB,MAAM,CAACqB,KAAD,CAAb,IAAyB,QAAzB,EAAqCrB,MAAM,CAACqB,KAAD,CAAN,CAAcQ,WAAd,GAA8BC,MAAvE,CAA+E,CAC3E,GAAIN,KAAJ,CAAWxB,MAAM,CAACqB,KAAD,CAAN,CAAgB,EAAhB,CAAX,IACK,OAAO,MACf,CACJ,CACD,MAAO,KACV,CAVD,CAYA,GAAIC,KAAJ,CAAW,CACP,GAAIM,KAAK,EAAT,CAAa,CACT,KAAKH,MAAL,CAAYzB,MAAM,CAACqB,KAAD,CAAlB,CAA2BC,KAA3B,CAAkCC,KAAlC,CAAyCC,KAAzC,CACH,CACD,MACH,CAED,GAAID,KAAK,EAAI,QAAOA,KAAP,IAAiB,QAA1B,EAAsCA,KAAK,CAACM,WAAN,GAAsBC,MAAhE,CAAwE,CACpE,GAAIF,KAAK,EAAT,CAAa,CACT,IAAK,GAAMzB,CAAAA,GAAX,GAAkBoB,CAAAA,KAAlB,CAAyB,CACrB,KAAKE,MAAL,CAAYzB,MAAM,CAACqB,KAAD,CAAlB,CAA2BlB,GAA3B,CAAgCoB,KAAK,CAACpB,GAAD,CAArC,CAA4CqB,KAA5C,CACH,CACJ,CACJ,CAND,IAMO,CACHxB,MAAM,CAACqB,KAAD,CAAN,CAAgBE,KACnB,CACJ,C,0CAGU,GAAIxB,CAAAA,c","sourcesContent":["import Define from './define'\r\n\r\nclass Define_manager {\r\n    append(...defines) {\r\n        let define\r\n        while ((define = defines.shift())) {\r\n            for (const key in define) {\r\n                this.set(key, define[key])\r\n            }\r\n        }\r\n    }\r\n\r\n    import(...promised) {\r\n        return new Promise((resolve, reject) => {\r\n            const matching = promised.length\r\n            let matched = 0, p\r\n            while ((p = promised.shift())) {\r\n                p.then(defines => {\r\n                    if (defines.hasOwnProperty('default')) {\r\n                        this.append(defines.default)\r\n                    } else {\r\n                        this.append(defines)\r\n                    }\r\n                    ++matched\r\n                    if (matched === matching) {\r\n                        resolve()\r\n                    }\r\n                }).catch(e => {\r\n                    reject(e)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    get(name = null) {\r\n        return name ? this.tryGet(Define, name) : Define\r\n    }\r\n\r\n    tryGet(define, name) {\r\n        const [name1, name2] = name.split('.', 2)\r\n        if (define.hasOwnProperty(name1)) {\r\n            return name2 ? this.tryGet(define[name1], name2) : define[name1]\r\n        }\r\n        return null\r\n    }\r\n\r\n    set(name, value, force = true) {\r\n        this.trySet(Define, name, value, force)\r\n    }\r\n\r\n    trySet(define, name, value, force) {\r\n        const names = name.split('.'),\r\n            name1 = names.shift(),\r\n            name2 = names.join('.')\r\n\r\n        const check = () => {\r\n            if (!define.hasOwnProperty(name1)) {\r\n                define[name1] = {}\r\n            } else {\r\n                if (typeof define[name1] !== 'object' || define[name1].constructor !== Object) {\r\n                    if (force) define[name1] = {}\r\n                    else return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n\r\n        if (name2) {\r\n            if (check()) {\r\n                this.trySet(define[name1], name2, value, force)\r\n            }\r\n            return\r\n        }\r\n\r\n        if (value && typeof value === 'object' && value.constructor === Object) {\r\n            if (check()) {\r\n                for (const key in value) {\r\n                    this.trySet(define[name1], key, value[key], force)\r\n                }\r\n            }\r\n        } else {\r\n            define[name1] = value\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Define_manager()"],"file":"define_manager.js"}